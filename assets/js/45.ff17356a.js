(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{1117:function(s,t,a){s.exports=a.p+"assets/img/2.1.scrapy入门使用-1.9943d5e6.png"},1118:function(s,t,a){s.exports=a.p+"assets/img/2.2.scrapy入门使用-2.39f97f66.png"},1324:function(s,t,a){"use strict";a.r(t);var r=a(3),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,r=s._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h2",{attrs:{id:"scrapy的入门使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scrapy的入门使用"}},[s._v("#")]),s._v(" scrapy的入门使用")]),s._v(" "),r("h5",{attrs:{id:"学习目标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#学习目标"}},[s._v("#")]),s._v(" 学习目标：")]),s._v(" "),r("ol",[r("li",[s._v("掌握 scrapy的安装")]),s._v(" "),r("li",[s._v("应用 创建scrapy的项目")]),s._v(" "),r("li",[s._v("应用 创建scrapy爬虫")]),s._v(" "),r("li",[s._v("应用 运行scrapy爬虫")]),s._v(" "),r("li",[s._v("应用 scrapy定位以及提取数据或属性值的方法")]),s._v(" "),r("li",[s._v("掌握 response响应对象的常用属性")])]),s._v(" "),r("hr"),s._v(" "),r("h3",{attrs:{id:"_1-安装scrapy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装scrapy"}},[s._v("#")]),s._v(" 1 安装scrapy"),r("br")]),s._v(" "),r("p",[s._v("命令:"),r("br"),s._v("\n    sudo apt-get install scrapy"),r("br"),s._v("\n或者："),r("br"),s._v("\n    pip/pip3 install scrapy")]),s._v(" "),r("h3",{attrs:{id:"_2-scrapy项目开发流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-scrapy项目开发流程"}},[s._v("#")]),s._v(" 2 scrapy项目开发流程")]),s._v(" "),r("ol",[r("li",[s._v("创建项目:"),r("br"),s._v("\n    scrapy startproject mySpider")]),s._v(" "),r("li",[s._v("生成一个爬虫:"),r("br"),s._v("\n    scrapy genspider itcast itcast.cn")]),s._v(" "),r("li",[s._v("提取数据:"),r("br"),s._v("\n    根据网站结构在spider中实现数据采集相关内容")]),s._v(" "),r("li",[s._v("保存数据:"),r("br"),s._v("\n    使用pipeline进行数据后续处理和保存")])]),s._v(" "),r("h3",{attrs:{id:"_3-创建项目"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建项目"}},[s._v("#")]),s._v(" 3. 创建项目")]),s._v(" "),r("blockquote",[r("p",[s._v("通过命令将scrapy项目的的文件生成出来，后续步骤都是在项目文件中进行相关操作，下面以抓取传智师资库来学习scrapy的入门使用：http://www.itcast.cn/channel/teacher.shtml")])]),s._v(" "),r("p",[s._v("创建scrapy项目的命令："),r("br"),s._v("\n    scrapy startproject <项目名字>"),r("br"),s._v("\n示例："),r("br"),s._v("\n    scrapy startproject myspider")]),s._v(" "),r("p",[s._v("生成的目录和文件结果如下：")]),s._v(" "),r("img",{attrs:{src:a(1117),width:"60%"}}),s._v(" "),r("h3",{attrs:{id:"_4-创建爬虫"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-创建爬虫"}},[s._v("#")]),s._v(" 4. 创建爬虫")]),s._v(" "),r("blockquote",[r("p",[s._v("通过命令创建出爬虫文件，爬虫文件为主要的代码作业文件，通常一个网站的爬取动作都会在爬虫文件中进行编写。")])]),s._v(" "),r("p",[s._v("命令："),r("br"),s._v(" "),r("strong",[s._v("在项目路径下执行")]),s._v(":"),r("br"),s._v("\n    scrapy genspider <爬虫名字> <允许爬取的域名>"),r("br")]),s._v(" "),r("p",[r("strong",[s._v("爬虫名字")]),s._v(": 作为爬虫运行时的参数"),r("br"),s._v(" "),r("strong",[s._v("允许爬取的域名")]),s._v(": 为对于爬虫设置的爬取范围，设置之后用于过滤要爬取的url，如果爬取的url与允许的域不通则被过滤掉。"),r("br")]),s._v(" "),r("p",[s._v("示例：")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("    cd myspider\n    scrapy genspider itcast itcast.cn\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br")])]),r("p",[s._v("生成的目录和文件结果如下：")]),s._v(" "),r("img",{attrs:{src:a(1118),width:"60%"}}),s._v(" "),r("h3",{attrs:{id:"_5-完善爬虫"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-完善爬虫"}},[s._v("#")]),s._v(" 5. 完善爬虫")]),s._v(" "),r("blockquote",[r("p",[s._v("在上一步生成出来的爬虫文件中编写指定网站的数据采集操作，实现数据提取")])]),s._v(" "),r("h4",{attrs:{id:"_5-1-在-myspider-myspider-spiders-itcast-py中修改内容如下"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-在-myspider-myspider-spiders-itcast-py中修改内容如下"}},[s._v("#")]),s._v(" 5.1 在/myspider/myspider/spiders/itcast.py中修改内容如下:")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("import scrapy\n\nclass ItcastSpider(scrapy.Spider):  # 继承scrapy.spider\n\t# 爬虫名字 \n    name = 'itcast' \n    # 允许爬取的范围\n    allowed_domains = ['itcast.cn'] \n    # 开始爬取的url地址\n    start_urls = ['http://www.itcast.cn/channel/teacher.shtml']\n    \n    # 数据提取的方法，接受下载中间件传过来的response\n    def parse(self, response): \n    \t# scrapy的response对象可以直接进行xpath\n    \tnames = response.xpath('//div[@class=\"tea_con\"]//li/div/h3/text()') \n    \tprint(names)\n\n    \t# 获取具体数据文本的方式如下\n        # 分组\n    \tli_list = response.xpath('//div[@class=\"tea_con\"]//li') \n        for li in li_list:\n        \t# 创建一个数据字典\n            item = {}\n            # 利用scrapy封装好的xpath选择器定位元素，并通过extract()或extract_first()来获取结果\n            item['name'] = li.xpath('.//h3/text()').extract_first() # 老师的名字\n            item['level'] = li.xpath('.//h4/text()').extract_first() # 老师的级别\n            item['text'] = li.xpath('.//p/text()').extract_first() # 老师的介绍\n            print(item)\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br"),r("span",{staticClass:"line-number"},[s._v("12")]),r("br"),r("span",{staticClass:"line-number"},[s._v("13")]),r("br"),r("span",{staticClass:"line-number"},[s._v("14")]),r("br"),r("span",{staticClass:"line-number"},[s._v("15")]),r("br"),r("span",{staticClass:"line-number"},[s._v("16")]),r("br"),r("span",{staticClass:"line-number"},[s._v("17")]),r("br"),r("span",{staticClass:"line-number"},[s._v("18")]),r("br"),r("span",{staticClass:"line-number"},[s._v("19")]),r("br"),r("span",{staticClass:"line-number"},[s._v("20")]),r("br"),r("span",{staticClass:"line-number"},[s._v("21")]),r("br"),r("span",{staticClass:"line-number"},[s._v("22")]),r("br"),r("span",{staticClass:"line-number"},[s._v("23")]),r("br"),r("span",{staticClass:"line-number"},[s._v("24")]),r("br"),r("span",{staticClass:"line-number"},[s._v("25")]),r("br"),r("span",{staticClass:"line-number"},[s._v("26")]),r("br"),r("span",{staticClass:"line-number"},[s._v("27")]),r("br")])]),r("h5",{attrs:{id:"注意"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意：")]),s._v(" "),r("ul",[r("li",[s._v("scrapy.Spider爬虫类中必须有名为parse的解析")]),s._v(" "),r("li",[s._v("如果网站结构层次比较复杂，也可以自定义其他解析函数")]),s._v(" "),r("li",[s._v("在解析函数中提取的url地址如果要发送请求，则必须属于allowed_domains范围内，但是start_urls中的url地址不受这个限制，我们会在后续的课程中学习如何在解析函数中构造发送请求")]),s._v(" "),r("li",[s._v("启动爬虫的时候注意启动的位置，是在项目路径下启动")]),s._v(" "),r("li",[s._v("parse()函数中使用yield返回数据，"),r("strong",[s._v("注意：解析函数中的yield能够传递的对象只能是：BaseItem, Request, dict, None")])])]),s._v(" "),r("h4",{attrs:{id:"_5-2-定位元素以及提取数据、属性值的方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-定位元素以及提取数据、属性值的方法"}},[s._v("#")]),s._v(" 5.2 定位元素以及提取数据、属性值的方法")]),s._v(" "),r("blockquote",[r("p",[s._v("解析并获取scrapy爬虫中的数据: 利用xpath规则字符串进行定位和提取")])]),s._v(" "),r("ol",[r("li",[s._v("response.xpath方法的返回结果是一个类似list的类型，其中包含的是selector对象，操作和列表一样，但是有一些额外的方法")]),s._v(" "),r("li",[s._v("额外方法extract()：返回一个包含有字符串的列表")]),s._v(" "),r("li",[s._v("额外方法extract_first()：返回列表中的第一个字符串，列表为空没有返回None")])]),s._v(" "),r("h4",{attrs:{id:"_5-3-response响应对象的常用属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-response响应对象的常用属性"}},[s._v("#")]),s._v(" 5.3 response响应对象的常用属性")]),s._v(" "),r("ul",[r("li",[s._v("response.url：当前响应的url地址")]),s._v(" "),r("li",[s._v("response.request.url：当前响应对应的请求的url地址")]),s._v(" "),r("li",[s._v("response.headers：响应头")]),s._v(" "),r("li",[s._v("response.requests.headers：当前响应的请求头")]),s._v(" "),r("li",[s._v("response.body：响应体，也就是html代码，byte类型")]),s._v(" "),r("li",[s._v("response.status：响应状态码")])]),s._v(" "),r("h3",{attrs:{id:"_6-保存数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-保存数据"}},[s._v("#")]),s._v(" 6 保存数据")]),s._v(" "),r("blockquote",[r("p",[s._v("利用管道pipeline来处理(保存)数据")])]),s._v(" "),r("h4",{attrs:{id:"_6-1-在pipelines-py文件中定义对数据的操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-在pipelines-py文件中定义对数据的操作"}},[s._v("#")]),s._v(" 6.1 在pipelines.py文件中定义对数据的操作")]),s._v(" "),r("ol",[r("li",[s._v("定义一个管道类"),r("br")]),s._v(" "),r("li",[s._v("重写管道类的process_item方法")]),s._v(" "),r("li",[s._v("process_item方法处理完item之后必须返回给引擎")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("import json\n\nclass ItcastPipeline():\n    # 爬虫文件中提取数据的方法每yield一次item，就会运行一次\n    # 该方法为固定名称函数\n    def process_item(self, item, spider):\n        print(item)\n        return item\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br")])]),r("h4",{attrs:{id:"_6-2-在settings-py配置启用管道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-在settings-py配置启用管道"}},[s._v("#")]),s._v(" 6.2 在settings.py配置启用管道")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("ITEM_PIPELINES = {\n    'myspider.pipelines.ItcastPipeline': 400\n}\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br")])]),r("p",[s._v("配置项中键为使用的管道类，管道类使用.进行分割，第一个为项目目录，第二个为文件，第三个为定义的管道类。"),r("br"),s._v("\n配置项中值为管道的使用顺序，设置的数值约小越优先执行，该值一般设置为1000以内。"),r("br")]),s._v(" "),r("h3",{attrs:{id:"_7-运行scrapy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-运行scrapy"}},[s._v("#")]),s._v(" 7. 运行scrapy")]),s._v(" "),r("p",[s._v("命令：在项目目录下执行scrapy crawl <爬虫名字>")]),s._v(" "),r("p",[s._v("示例：scrapy crawl itcast")]),s._v(" "),r("hr"),s._v(" "),r("h2",{attrs:{id:"小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),r("ol",[r("li",[s._v("scrapy的安装：pip install scrapy")]),s._v(" "),r("li",[s._v("创建scrapy的项目: scrapy startproject myspider")]),s._v(" "),r("li",[s._v("创建scrapy爬虫：在项目目录下执行 scrapy genspider itcast itcast.cn")]),s._v(" "),r("li",[s._v("运行scrapy爬虫：在项目目录下执行 scrapy crawl itcast")]),s._v(" "),r("li",[s._v("解析并获取scrapy爬虫中的数据：\n"),r("ol",[r("li",[s._v("response.xpath方法的返回结果是一个类似list的类型，其中包含的是selector对象，操作和列表一样，但是有一些额外的方法")]),s._v(" "),r("li",[s._v("extract() 返回一个包含有字符串的列表")]),s._v(" "),r("li",[s._v("extract_first() 返回列表中的第一个字符串，列表为空没有返回None")])])]),s._v(" "),r("li",[s._v("scrapy管道的基本使用:\n"),r("ol",[r("li",[s._v("完善pipelines.py中的process_item函数")]),s._v(" "),r("li",[s._v("在settings.py中设置开启pipeline")])])]),s._v(" "),r("li",[s._v("response响应对象的常用属性\n"),r("ol",[r("li",[s._v("response.url：当前响应的url地址")]),s._v(" "),r("li",[s._v("response.request.url：当前响应对应的请求的url地址")]),s._v(" "),r("li",[s._v("response.headers：响应头")]),s._v(" "),r("li",[s._v("response.requests.headers：当前响应的请求头")]),s._v(" "),r("li",[s._v("response.body：响应体，也就是html代码，byte类型")]),s._v(" "),r("li",[s._v("response.status：响应状态码")])])])]),s._v(" "),r("hr")])}),[],!1,null,null,null);t.default=e.exports}}]);